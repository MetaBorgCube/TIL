module optimisation/copyprop

imports
  strategolib
  signatures/-
  optimisation/opt-lib

strategies
  copyprop :: ? -> ?
  copyprop =
    alltd(CopyProp <+ copyprop-rule)

  copyprop-rule :: ? -> ?
  copyprop-rule =
    Block({| CopyProp : map(copyprop) |})

  copyprop-rule = 
    (?Declaration(x) <+ ?DeclarationTyped(x, t))
    ; new-CopyProp(|x, x)

  copyprop-rule = 
    Assign(?x, copyprop => e)
    ; undefine-CopyProp(|x)
    ; where( innermost-scope-CopyProp => z )
    ; if <?Var(y)> e then
        rules( CopyProp.z : Var(x) -> Var(y) depends on [(x,x),(y,y)] )
      end

  copyprop-rule =
    IfElse(copyprop, id, id)
    ; (IfElse(id, copyprop, id) /CopyProp\ IfElse(id,id,copyprop))

  copyprop-rule =
    ?While(_, _)
    ; (/CopyProp\* While(copyprop, copyprop))

  innermost-scope-CopyProp :: ? -> ?
  innermost-scope-CopyProp = 
    get-var-names => vars
    ; innermost-scope-CopyProp(elem-of(|vars))
